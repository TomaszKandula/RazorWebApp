@page

    <section id="IndexPage" data-xsrf=@ViewData["XCSRF"]>

        <div id="Handle_Modal" class="modal"></div>

        <section class="hero is-medium is-info">

            <div class="hero-body">

                <div class="container">

                    <h1 class="title">
                        Example application in NET Core 3.1.
                    </h1>

                    <h2 class="subtitle">
                        Secure WebApp
                    </h2>

                </div>

            </div>

        </section>

        <section class="section">

            <div class="container mt-3 mb-3">

                <h1 class="title">The purpose</h1>

                <h2 class="subtitle">
                    Why this has been created in first place?
                </h2>

                <p>
                    This web application has been built as an example of an application that is in compliance with some security best practices describded in the following article 
                    <a href="https://medium.com/&#64;tomasz.kandula/sql-injection-1bde8bb76ebc" target="_blank">SQL Injection</a> posted on <a href="https://medium.com/" target="_blank">Medium.com</a>. Therefore:
                </p>

                <div class="content">
                    <ol>
                        <li>
                            User input is validated on the front-end and on the back-end.
                        </li>
                        <li>
                            Instead of ADO.NET with custom SQL string, we use OR/M (Entity Framework Core).
                        </li>
                        <li>
                            User password is hashed and salted with <a href="https://auth0.com/blog/hashing-in-action-understanding-bcrypt/" target="_blank">BCrypt</a>.
                            Please note that we do not use SHA2_512 and GUID for hashing and salting on the server-side via SQL stored procedures (this would be the alternative approach, most likely implemented by DBA).
                            Using BCrypt (or SCrypt) is much preferable.
                        </li>
                    </ol>
                </div>

                <p>
                    Currently, this example application focuses more on the back-end than on the front-end. The selected CSS framework have no jQuery/JavaScript code, so the custom JavaScript logic has been written. 
                    It is fairly simple front-end (multipages, no SPA) with only few components, it uses Anti-Forgery Token along with Session Id (both HTTP only).
                </p>

            </div>

            <div class="is-divider"></div>

            <div class="container mt-3 mb-3">

                <h1 class="title">The example</h1>

                <h2 class="subtitle">
                    How does it work?
                </h2>

                <div class="mb-3">
                    There are five web pages, among them most important are <strong>Register page</strong> (allows to create new user account) and <strong>Login page</strong> (allows to login to the given account).
                    Once the account is created we display modal window with the confirmation. However, if the user is logged, then we setup a 15 minutes session and redirect back to this page.
                </div>
                <div class="mb-3">
                    The back-end uses Web API so when a user is logged, further API calls to the controllers must contain both XSRF token and Session Id. Please be mindful that this is not complete solution
                    (for example, we do not send registration confirmation email, thus by default, newly created account is activated), the scope of this demo application is limited.
                </div>
                <div class="mb-3">
                    Never the less, this demo application maybe extended later on.
                </div>

            </div>

            <div class="is-divider"></div>

            <div class="container mt-3 mb-3">

                <h1 class="title">The technology</h1>

                <h2 class="subtitle">
                    What has been used?
                </h2>

                <p>
                    Front-end:
                </p>
                <div class="content">
                    <ol class="is-upper-roman">
                        <li>
                            Bulma CSS framework v.0.9.0 via CDN.
                        </li>
                        <li>
                            Bulma divider 0.2.0 via CDN.
                        </li>
                        <li>
                            Vanilla JavaScript with AJAX.
                        </li>
                        <li>
                            WebPack module bundler.
                        </li>
                    </ol>
                </div>

                <p>
                    Back-end:
                </p>
                <div class="content">
                    <ol class="is-upper-roman">
                        <li>
                            NET Core 3.1, C# language, Razor Pages, Web API.
                        </li>
                        <li>
                            SQL Database, Entity Framework Core.
                        </li>
                        <li>
                            Unit Tests and Integration Tests are provided.
                        </li>
                    </ol>
                </div>

            </div>

        </section>

    </section>
